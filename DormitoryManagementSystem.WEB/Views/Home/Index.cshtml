@model IEnumerable<Dormitory>

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Yurt Yönetim Sistemi - AI Chat Assistant</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" />
    <style>
        .chat-message {
            margin-bottom: 1rem;
            padding: 0.75rem;
            border-radius: 0.5rem;
        }

        .user-message {
            background-color: #e9ecef;
            margin-left: 20%;
        }

        .ai-message {
            background-color: #f8f9fa;
            margin-right: 20%;
        }

        .typing-indicator {
            padding: 0.5rem;
            color: #6c757d;
            font-style: italic;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h3>Yurt Doluluk Oranları</h3>
                    </div>
                    <div class="card-body">
                        @foreach (var dormitory in Model)
                        {
                            <div class="mb-4">
                                <h4>@dormitory.DormitoryName</h4>
                                <div class="progress">
                                    <div class="progress-bar" role="progressbar"
                                         style="width: @dormitory.OccupancyRate%"
                                         aria-valuenow="@dormitory.OccupancyRate"
                                         aria-valuemin="0"
                                         aria-valuemax="100">
                                        @dormitory.OccupancyRate%
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h3>AI Chat Assistant</h3>
                    </div>
                    <div class="card-body">
                        <div class="chat-container" style="height: 400px; overflow-y: auto;">
                            <div id="chatMessages" class="mb-3">
                                <!-- Messages will appear here -->
                            </div>
                        </div>
                        <div class="chat-input">
                            <form id="chatForm" class="d-flex gap-2" asp-controller="AI" asp-action="AiChat">
                                <input type="text" id="userInput" name="UserMessage" class="form-control"
                                       placeholder="Kariyerle ilgili bir şey sorun..." required>

                                <button type="submit" class="btn btn-primary">
                                    Gönder
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.getElementById('chatForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const input = document.getElementById('userInput');
            const message = input.value;
            input.value = '';

            // Kullanıcı mesajını ekle
            addMessage(message, 'user');

            // Yazma göstergesi göster
            showTypingIndicator();

            try {
                // API çağrısı yap
                const response = await fetch('/Home/Index', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded', // URL encoded format
                    },
                    body: new URLSearchParams({ UserMessage: message }) // URLSearchParams kullanarak gönderin
                });

                if (!response.ok) {
                    throw new Error('Ağ hatası');
                }

                const data = await response.json();

                // Yazma göstergesini kaldır ve AI yanıtını ekle
                removeTypingIndicator();
                addMessage(data.response, 'ai');
            } catch (error) {
                removeTypingIndicator();
                addMessage('Üzgünüm, bir hata oluştu. Lütfen tekrar deneyin.', 'ai');
            }
        });


        function addMessage(message, sender) {
            const chatMessages = document.getElementById('chatMessages');
            const messageDiv = document.createElement('div');
            messageDiv.className = `chat-message ${sender}-message`;
            messageDiv.textContent = message;
            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight; // Scroll to bottom
        }

        function showTypingIndicator() {
            const chatMessages = document.getElementById('chatMessages');
            const indicator = document.createElement('div');
            indicator.className = 'typing-indicator';
            indicator.id = 'typingIndicator';
            indicator.textContent = 'AI yazıyor...';
            chatMessages.appendChild(indicator);
            chatMessages.scrollTop = chatMessages.scrollHeight; // Scroll to bottom
        }

        function removeTypingIndicator() {
            const indicator = document.getElementById('typingIndicator');
            if (indicator) {
                indicator.remove();
            }
        }
    </script>

</body>
</html>
